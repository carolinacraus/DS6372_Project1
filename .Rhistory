temp_plot <- ggplot(car_data, aes(j,MSRP)) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)+
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,MSRP)) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)+
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
assign(plot_var_name, temp_plot)
}
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)+
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)+
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
assign(plot_var_name, temp_plot)
}
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(cont_var), function(j) {
ggplot(cont_var, aes_string(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE) +
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
})
ggplot(cont_var, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE) +
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(cont_var, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE) +
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
})
ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE) +
scale_y_continuous(labels = percent_format()) +
ylab("% of Attrition")
ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
library(gridExtra)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), position = "dodge", show.legend = FALSE)
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), show.legend = FALSE)
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,"MSRP")) +
geom_point(aes(y = ..count../sum(..count..)), show.legend = FALSE)
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,"MSRP")) +
geom_point()
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,"MSRP")) +
geom_point()
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
temp_plot <- ggplot(car_data, aes(j,MSRP)) +
geom_point()
ggplot(car_data, aes(j,MSRP)) +
geom_point()
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
plot_var_name <- str_c(c("ggplot",j), collapse ="_")
print(plot_var_name)
temp_plot <- ggplot(car_data, aes(j,MSRP)) +
geom_point()
assign(plot_var_name, temp_plot)
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,MSRP)) +
geom_point()
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
temp_plot <- ggplot(car_data, aes(j,MSRP)) +
geom_point()
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,MSRP)) +
geom_point()
})
my_plots_list[[1]] = NULL # to get rid of MSRP / MSRP Plot
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
# MAKE
library(ggplot2)
library(gridExtra)
for (j in names(car_data)) {
temp_plot <- ggplot(car_data, aes(j,MSRP)) +
geom_point()
}
my_plots_list <- lapply(names(car_data), function(j) {
ggplot(car_data, aes(j,MSRP)) +
geom_point()
})
gridExtra::grid.arrange(grobs= my_plots_list, ncol = 4)
library(tidyverse)
library(naniar)
dataset <- read.csv("C:/Users/Joey/Desktop/applied-stats/datasets/data1.csv")
#glimpse(dataset) # looking at the var types of each
summary(dataset) # visually looking at dataset
vis_miss(dataset) # viz looking @ missing values
#updating NA for Doors
dataset[6931:6935,9] <- 4 # Tesla model S
dataset[4667,9] <- 2 # Ferrari FF
dataset[1984:1985, 6] <- 0 # chevy bolt EV
dataset[3717:3720, 6] <- 0 # volkswagen e-golf
dataset[5779:5781,6] <- 0 # mitsubishi i-miev
dataset[8374,6] <- 0 # toyota rav4-ev
dataset[c(5826,5831,5832,5834,5840,5841),6]<- 305 # chevy impala flex-fuel
dataset[c(6909,6911,6917,6919),6]<-240 # lincoln mkz
dataset[8374,5] <- 'NA' # toyota RAV4-EV
dataset[2906:2909,5] <- 305 # lincoln Continental
dataset[4204:4207,5]<- 168 # ford escape
dataset[4915:4920,5]<- 193 # ford freestar
car_data <- dataset
car_data[1290:1291, 7] <- "AUTOMATIC" # oldsmobile achieva
car_data[4692,7]<- "MANUAL" # cheaper firebird
car_data[4693:4694,7]<- "AUTOMATIC" #more expensive firebird
car_data[6159,7] <- "MANUAL" # GMC Jimmy cheaper 99
car_data[6161,7] <- "AUTOMATIC" # GMC jimmy 99
car_data[6166,7] <- "MANUAL" #gmc jimmy 00
car_data[6175,7]<- "AUTOMATIC" # gmc jimmy 00
car_data[6367,7] <- "MANUAL" # chrysler le baron
car_data[6369,7] <- "AUTOMATIC"# chrysler le baron
car_data[c(8043,8044,8047,8048,8049,8050,8052,8054),7] <- "AUTOMATIC" # dodge ram 150
#view(car_data)
sum(car_data$Market.Category == "N/A")
car_data$Make <- as.factor(car_data$Make)
car_data$Model<-as.factor(car_data$Model)
car_data$Year<-as.factor(car_data$Year)
car_data$Engine.Fuel.Type<- as.factor(car_data$Engine.Fuel.Type)
car_data$Engine.HP<- as.numeric(car_data$Engine.HP) # na
car_data$Engine.Cylinders<-as.factor(car_data$Engine.Cylinders)
car_data$Transmission.Type<-as.factor(car_data$Transmission.Type)
car_data$Driven_Wheels<- as.factor(car_data$Driven_Wheels)
car_data$Number.of.Doors<- as.factor(car_data$Number.of.Doors)
car_data$Market.Category<-as.factor(car_data$Market.Category)
car_data$Vehicle.Size<-as.factor(car_data$Vehicle.Size)
car_data$Vehicle.Style<-as.factor(car_data$Vehicle.Style)
car_data$Make <- as.factor(car_data$Make)
car_data$Model<-as.factor(car_data$Model)
car_data$Year<-as.factor(car_data$Year)
car_data$Engine.Fuel.Type<- as.factor(car_data$Engine.Fuel.Type)
car_data$Engine.HP<- as.numeric(car_data$Engine.HP) # na values from elec. vehic.
car_data$Engine.Cylinders<-as.factor(car_data$Engine.Cylinders)
car_data$Transmission.Type<-as.factor(car_data$Transmission.Type)
car_data$Driven_Wheels<- as.factor(car_data$Driven_Wheels)
car_data$Number.of.Doors<- as.factor(car_data$Number.of.Doors)
car_data$Market.Category<-as.factor(car_data$Market.Category)
car_data$Vehicle.Size<-as.factor(car_data$Vehicle.Size)
car_data$Vehicle.Style<-as.factor(car_data$Vehicle.Style)
library(ggplot2)
glimpse(car_data)
car_data %>% ggplot(aes(Popularity, MSRP))+
geom_point
car_data %>% ggplot(aes(Popularity, MSRP))+
geom_point()
car_data %>% ggplot(aes(Popularity, MSRP))+
geom_point()
library(tidyverse)
library(naniar)
dataset <- read.csv("C:/Users/Joey/Desktop/applied-stats/datasets/data1.csv")
#glimpse(dataset) # looking at the var types of each
summary(dataset) # visually looking at dataset
vis_miss(dataset) # viz looking @ missing values
#updating NA for Doors
dataset[6931:6935,9] <- 4 # Tesla model S
dataset[4667,9] <- 2 # Ferrari FF
dataset[1984:1985, 6] <- 0 # chevy bolt EV
dataset[3717:3720, 6] <- 0 # volkswagen e-golf
dataset[5779:5781,6] <- 0 # mitsubishi i-miev
dataset[8374,6] <- 0 # toyota rav4-ev
dataset[c(5826,5831,5832,5834,5840,5841),6]<- 305 # chevy impala flex-fuel
dataset[c(6909,6911,6917,6919),6]<-240 # lincoln mkz
dataset[8374,5] <- 'NA' # toyota RAV4-EV
dataset[2906:2909,5] <- 305 # lincoln Continental
dataset[4204:4207,5]<- 168 # ford escape
dataset[4915:4920,5]<- 193 # ford freestar
car_data <- dataset
car_data[1290:1291, 7] <- "AUTOMATIC" # oldsmobile achieva
car_data[4692,7]<- "MANUAL" # cheaper firebird
car_data[4693:4694,7]<- "AUTOMATIC" #more expensive firebird
car_data[6159,7] <- "MANUAL" # GMC Jimmy cheaper 99
car_data[6161,7] <- "AUTOMATIC" # GMC jimmy 99
car_data[6166,7] <- "MANUAL" #gmc jimmy 00
car_data[6175,7]<- "AUTOMATIC" # gmc jimmy 00
car_data[6367,7] <- "MANUAL" # chrysler le baron
car_data[6369,7] <- "AUTOMATIC"# chrysler le baron
car_data[c(8043,8044,8047,8048,8049,8050,8052,8054),7] <- "AUTOMATIC" # dodge ram 150
#view(car_data)
sum(car_data$Market.Category == "N/A")
car_data$Make <- as.factor(car_data$Make)
car_data$Model<-as.factor(car_data$Model)
car_data$Year<-as.factor(car_data$Year)
car_data$Engine.Fuel.Type<- as.factor(car_data$Engine.Fuel.Type)
car_data$Engine.HP<- as.numeric(car_data$Engine.HP) # na values from elec. vehic.
car_data$Engine.Cylinders<-as.factor(car_data$Engine.Cylinders)
car_data$Transmission.Type<-as.factor(car_data$Transmission.Type)
car_data$Driven_Wheels<- as.factor(car_data$Driven_Wheels)
car_data$Number.of.Doors<- as.factor(car_data$Number.of.Doors)
car_data$Market.Category<-as.factor(car_data$Market.Category)
car_data$Vehicle.Size<-as.factor(car_data$Vehicle.Size)
car_data$Vehicle.Style<-as.factor(car_data$Vehicle.Style)
car_data %>% ggplot(aes(Popularity, MSRP))+
geom_point()
glimpse(car_data)
plot(car_data$Popularity,car_data$MSRP)
plot(car_data$Popularity,Log(car_data$MSRP))
plot(car_data$Popularity,log(car_data$MSRP))
plot(log(car_data$Popularity),log(car_data$MSRP))
plot(car_data$city.mpg,car_data$MSRP)
#hwy mpg
plot(car_data$highway.MPG,car_data$MSRP)
glimpse(car_data)
plot(car_data$Vehicle.Style, car_data$MSRP)
plot(car_data$Vehicle.Style, log(car_data$MSRP))
#hwy mpg
plot(car_data$highway.MPG, log(car_data$MSRP))
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP) )
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP))
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP))
plot(car_data$Vehicle.Style, log(car_data$MSRP))
glimpse(car_data)
plot(log(car_data$Popularity, log(car_data$MSRP)))
plot(log(car_data$Popularity, log(car_data$MSRP)))
# Veh. Style
plot(car_data$Vehicle.Style, log(car_data$MSRP))
glimpse(car_data)
plot(car_data$make,log(car_data$MSRP))
plot(car_data$Make,log(car_data$MSRP))
plot(car_data$Model, log(car_data$MSRP))
plot(car_data$Model, car_data$MSRP)
glimpse(car_data)
plot(car_data$Year, log(car_data$MSRP))
#
plot(car_data$Engine.Fuel.Type, log(car_data$MSRP))
plot(car_data$Engine.HP, log(car_data$MSRP))
plot(car_data$Engine.Cylinders, log(car_data$MSRP))
plot(car_data$Transmission.Type, log(car_data$MSRP))
plot(car_data$Driven_Wheels, log(car_data$MSRP))
plot(car_data$Number.of.Doors, log(car_data$MSRP))
plot(car_data$Market.Category, log(car_data$MSRP))
plot(car_data$Vehicle.Size, log(car_data$MSRP))
plot(car_data$Vehicle.Style, log(car_data$MSRP))
# popularity
plot(log(car_data$Popularity, log(car_data$MSRP)))
# popularity
plot(log(as.factor(car_data$Popularity), log(car_data$MSRP))) # this looks irrelavant
# popularity
plot(log(car_data$as.factor(Popularity)), log(car_data$MSRP))) # this looks irrelavant
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP))) # this looks irrelavant
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP)) # this looks irrelavant
# popularity
plot(log(car_data$as.factor(Popularity)), log(car_data$MSRP)) # this looks irrelavant
# popularity
plot(log(as.factor(car_data$(Popularity)), log(car_data$MSRP)) # this looks irrelavant
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP)) # this looks irrelavant
# numerical
par(mfrow = c(2,2))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP))
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP))
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP)) # this looks irrelevant ?
# numerical
par(mfrow = c(2,2))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP))
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP))
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP)) # this looks irrelevant ?
# numerical
par(mfrow = c(2,2))
# city mpg
mpgcar<- plot(log(car_data$city.mpg),log(car_data$MSRP))
#hwy mpg
hwycar<-plot(log(car_data$highway.MPG), log(car_data$MSRP))
# popularity
popcar<-plot(log(car_data$Popularity), log(car_data$MSRP)) # this looks irrelevant ?
mpgcar,hwycar, popcar
plot(c(mpgcar,hwycar,popcar))
plot(c("mpgcar","hwycar","popcar"))
# categorical
par(mfrow = c(3,3))
# Veh. Style
plot(car_data$Vehicle.Style, log(car_data$MSRP))
# make
plot(car_data$Make,log(car_data$MSRP))
# year
plot(car_data$Year, log(car_data$MSRP))
# fuel type
plot(car_data$Engine.Fuel.Type, log(car_data$MSRP))
# HP
plot(car_data$Engine.HP, log(car_data$MSRP))
# cylinders
plot(car_data$Engine.Cylinders, log(car_data$MSRP))
par(mfrow = c(3,3))
# transmission type
plot(car_data$Transmission.Type, log(car_data$MSRP))
# wheel drive
plot(car_data$Driven_Wheels, log(car_data$MSRP))
# number of doors
plot(car_data$Number.of.Doors, log(car_data$MSRP))
# market category
plot(car_data$Market.Category, log(car_data$MSRP))  #there is big chunk of missing values this may be unreliable
# size
plot(car_data$Vehicle.Size, log(car_data$MSRP))
# style
plot(car_data$Vehicle.Style, log(car_data$MSRP))
library(ggplot2)
glimpse(car_data)
# numerical
par(mfrow = c(2,2))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP))
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP))
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP)) # this looks irrelevant ?
# categorical
par(mfrow = c(2,3))
# categorical
par(mfrow = c(2,3))
# Veh. Style
plot(car_data$Vehicle.Style, log(car_data$MSRP))
# make
plot(car_data$Make,log(car_data$MSRP))
# year
plot(car_data$Year, log(car_data$MSRP))
# fuel type
plot(car_data$Engine.Fuel.Type, log(car_data$MSRP))
# HP
plot(car_data$Engine.HP, log(car_data$MSRP))
# cylinders
plot(car_data$Engine.Cylinders, log(car_data$MSRP))
par(mfrow = c(2,3))
# transmission type
plot(car_data$Transmission.Type, log(car_data$MSRP))
# wheel drive
plot(car_data$Driven_Wheels, log(car_data$MSRP))
# number of doors
plot(car_data$Number.of.Doors, log(car_data$MSRP))
# market category
plot(car_data$Market.Category, log(car_data$MSRP))  #there is big chunk of missing values this may be unreliable
# size
plot(car_data$Vehicle.Size, log(car_data$MSRP))
# style
plot(car_data$Vehicle.Style, log(car_data$MSRP))
# transmission type
plot(car_data$Transmission.Type, log(car_data$MSRP), main = "trans. type")
par(mfrow = c(2,3))
# transmission type
plot(car_data$Transmission.Type, log(car_data$MSRP), main = "trans. type")
# wheel drive
plot(car_data$Driven_Wheels, log(car_data$MSRP), main = "wheel drive")
# number of doors
plot(car_data$Number.of.Doors, log(car_data$MSRP), main = "num of doors")
# market category
plot(car_data$Market.Category, log(car_data$MSRP), main = "market category")  #there is big chunk of missing values this may be unreliable
# size
plot(car_data$Vehicle.Size, log(car_data$MSRP), main = "vehicle size")
# style
plot(car_data$Vehicle.Style, log(car_data$MSRP), main = "vehicle style")
# categorical
par(mfrow = c(2,3))
# Veh. Style
plot(car_data$Vehicle.Style, log(car_data$MSRP), main = "vehicle style")
# make
plot(car_data$Make,log(car_data$MSRP), main = "make")
# year
plot(car_data$Year, log(car_data$MSRP), main = "year")
# fuel type
plot(car_data$Engine.Fuel.Type, log(car_data$MSRP), main = "fuel type")
# HP
plot(car_data$Engine.HP, log(car_data$MSRP), main = "horse power")
# cylinders
plot(car_data$Engine.Cylinders, log(car_data$MSRP), main = "cylinders")
library(ggplot2)
glimpse(car_data)
# numerical
par(mfrow = c(2,2))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP), main = "city mpg")
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP), main = "hwy mpg")
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP), main = "popular") # this looks irrelevant ?
glimpse(car_data)
# numerical
par(mfrow = c(3,1))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP), main = "city mpg")
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP), main = "hwy mpg")
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP), main = "popular") # this looks irrelevant ?
glimpse(car_data)
# numerical
par(mfrow = c(2,2))
# city mpg
plot(log(car_data$city.mpg),log(car_data$MSRP), main = "city mpg")
#hwy mpg
plot(log(car_data$highway.MPG), log(car_data$MSRP), main = "hwy mpg")
# popularity
plot(log(car_data$Popularity), log(car_data$MSRP), main = "popular") # this looks irrelevant ?
